CREATE TABLE Gry (
    gra_id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    tytul VARCHAR2(50) NOT NULL,
    gatunek VARCHAR2(50) NOT NULL,
    wydawca VARCHAR2(30),
    liczba_graczy VARCHAR2(30),
    czas_rozgrywki VARCHAR2(30),
    status VARCHAR2(30) DEFAULT 'dostepna' 
    CONSTRAINT status_check CHECK (status IN ('dostepna', 'wypozyczona', 'uszkodzona'))
);

CREATE TABLE Uzytkownicy (
    user_id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    imie VARCHAR2(30) NOT NULL,
    nazwisko VARCHAR2(30) NOT NULL,
    email VARCHAR2(30) NOT NULL,
    nr_telefonu VARCHAR2(30)
);

CREATE TABLE Wypozyczenia (
    wypozyczenie_id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    user_id NUMBER NOT NULL,
    gra_id NUMBER NOT NULL,
    data_od DATE DEFAULT SYSDATE NOT NULL,
    data_do DATE,
    status VARCHAR2(30) DEFAULT 'wypozyczona' 
    CONSTRAINT status_check CHECK (status IN ('dostepna', 'wypozyczona', 'uszkodzona')),
    FOREIGN KEY (user_id) REFERENCES Uzytkownicy (user_id) ON DELETE CASCADE,
    FOREIGN KEY (gra_id) REFERENCES Gry (gra_id) ON DELETE CASCADE
);

CREATE TABLE Gry_Archiwum (
    gra_id NUMBER,
    tytul VARCHAR2(50),
    gatunek VARCHAR2(50),
    wydawca VARCHAR2(30),
    liczba_graczy VARCHAR2(30),
    czas_rozgrywki VARCHAR2(30),
    status VARCHAR2(30),
    data_operacji DATE,
    typ_operacji VARCHAR2(30),
    PRIMARY KEY (gra_id, data_operacji)
);

CREATE TABLE Wypozyczenia_Archiwum (
    wypozyczenie_id NUMBER,
    user_id NUMBER,
    gra_id NUMBER,
    data_od DATE,
    data_do DATE,
    status VARCHAR2(30),
    data_operacji DATE DEFAULT SYSDATE,
    PRIMARY KEY (wypozyczenie_id, data_operacji)
);

CREATE TABLE Logi (
    id_logu NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    operacja VARCHAR2(50),
    szczegoly VARCHAR2(100),
    data_operacji DATE DEFAULT SYSDATE
);

ALTER TABLE Wypozyczenia ADD CONSTRAINT spr_daty CHECK (data_do >= data_od);
ALTER TABLE Gry ADD CONSTRAINT spr_czas CHECK (czas_rozgrywki >= 10);
